name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  FASTLANE_SKIP_UPDATE_CHECK: 1
  FASTLANE_HIDE_GITHUB_ISSUES: 1
  FASTLANE_HIDE_CHANGELOG: 1

jobs:
  test:
    name: Run Tests
    runs-on: macos-latest
    strategy:
      matrix:
        xcode-version: ['15.4', '16.0']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Select Xcode version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ matrix.xcode-version }}

    - name: Cache Ruby gems
      uses: actions/cache@v4
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Cache DerivedData
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-derived-data-${{ hashFiles('**/*.swift', '**/*.m', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-derived-data-

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Setup keychain
      run: |
        security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
        security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

    - name: Run Fastlane tests
      run: bundle exec fastlane test
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
        APPSTORE_TEAM_ID: ${{ secrets.APPSTORE_TEAM_ID }}
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-xcode-${{ matrix.xcode-version }}
        path: |
          fastlane/test_output/
          *.xcresult
        retention-days: 30

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports-xcode-${{ matrix.xcode-version }}
        path: |
          fastlane/test_output/coverage/
        retention-days: 30

    - name: Clean up keychain
      if: always()
      run: |
        security delete-keychain build.keychain || true

  build:
    name: Build Archive
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Select Xcode version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0'

    - name: Cache Ruby gems
      uses: actions/cache@v4
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Cache DerivedData
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-derived-data-${{ hashFiles('**/*.swift', '**/*.m', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-derived-data-

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Setup keychain
      run: |
        security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
        security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

    - name: Build archive
      run: bundle exec fastlane build
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
        APPSTORE_TEAM_ID: ${{ secrets.APPSTORE_TEAM_ID }}
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-artifacts
        path: |
          *.ipa
          *.app
          *.dSYM.zip
        retention-days: 30

    - name: Clean up keychain
      if: always()
      run: |
        security delete-keychain build.keychain || true